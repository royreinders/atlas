{"version":3,"sources":["./src/app/app.component.html","./src/app/findings/findings.component.html","./src/app/home/home.component.html","./src/app/import/import.component.html","./src/app/tasks/tasks.component.html","./src/app/test/test.component.html","./src/app/tools/tools.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/data.service.ts","./src/app/findings/findings.component.css","./src/app/findings/findings.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/import/import.component.css","./src/app/import/import.component.ts","./src/app/tasks/tasks.component.css","./src/app/tasks/tasks.component.ts","./src/app/test/test.component.css","./src/app/test/test.component.ts","./src/app/tools/tools.component.css","./src/app/tools/tools.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"<div class=\\\"main-container\\\">\\n    <header class=\\\"header\\\">\\n        <div class=\\\"branding\\\">\\n            <a href=\\\"#\\\" class=\\\"nav-link\\\">\\n                <span class=\\\"title\\\">ATLAS</span>\\n            </a>\\n        </div>\\n        <div class=\\\"header-actions\\\">\\n            <clr-dropdown>\\n                <button class=\\\"nav-icon\\\" clrDropdownTrigger>\\n                    <clr-icon shape=\\\"cog\\\"></clr-icon>\\n                    <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n                </button>\\n                <clr-dropdown-menu *clrIfOpen clrPosition=\\\"bottom-right\\\">\\n                    <a href=\\\"home\\\" clrDropdownItem>About</a>\\n                    <a href=\\\"home\\\" clrDropdownItem>Preferences</a>\\n                    <a href=\\\"home\\\" clrDropdownItem>Log out</a>\\n                </clr-dropdown-menu>\\n            </clr-dropdown>\\n        </div>\\n    </header>\\n    <div class=\\\"content-container\\\">\\n        <clr-vertical-nav [clrVerticalNavCollapsible]=\\\"true\\\" [(clrVerticalNavCollapsed)]=\\\"collapsed\\\">\\n            <a clrVerticalNavLink routerLink=\\\"home\\\" routerLinkActive=\\\"active\\\">\\n                <clr-icon clrVerticalNavIcon shape=\\\"dashboard\\\"></clr-icon>\\n                Dashboard\\n            </a>\\n            <a clrVerticalNavLink routerLink=\\\"import\\\" routerLinkActive=\\\"active\\\">\\n                <clr-icon clrVerticalNavIcon shape=\\\"upload\\\"></clr-icon>\\n                Import\\n            </a>\\n            <a clrVerticalNavLink routerLink=\\\"findings\\\" routerLinkActive=\\\"active\\\">\\n                <clr-icon clrVerticalNavIcon shape=\\\"bullseye\\\"></clr-icon>\\n                Findings\\n            </a>\\n            <a clrVerticalNavLink routerLink=\\\"tasks\\\" routerLinkActive=\\\"active\\\">\\n                <clr-icon clrVerticalNavIcon shape=\\\"tasks\\\"></clr-icon>\\n                Tasks\\n            </a>\\n            <a clrVerticalNavLink routerLink=\\\"tools\\\" routerLinkActive=\\\"active\\\">\\n                <clr-icon clrVerticalNavIcon shape=\\\"wrench\\\"></clr-icon>\\n                Tools\\n            </a>\\n            <!--<a clrVerticalNavLink routerLink=\\\"test\\\" routerLinkActive=\\\"active\\\">\\n                <clr-icon clrVerticalNavIcon shape=\\\"flag\\\"></clr-icon>\\n                Test\\n            </a>-->\\n        </clr-vertical-nav>\\n        <div class=\\\"content-area\\\">\\n\\n            <router-outlet></router-outlet>\\n        </div>\\n\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"clr-row\\\">\\n    <div class=\\\"clr-col-5\\\">\\n        <clr-datagrid [(clrDgSingleSelected)]=\\\"selected_finding\\\"\\n            (clrDgSingleSelectedChange)=\\\"selectedFindingChanged($event)\\\" [clrDgRowSelection]=\\\"true\\\"\\n            class=\\\"datagrid-compact\\\">\\n            <clr-dg-action-bar>\\n                <div class=\\\"btn-group\\\">\\n                    <button class=\\\"btn\\\" (click)=\\\"addFindingModal = true\\\">\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon> Add Finding\\n                    </button>\\n                    <button class=\\\"btn\\\" [disabled]=\\\"!selected_finding\\\" (click)=\\\"editFindingModal = true\\\">\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon> Edit Finding\\n                    </button>\\n                    <button class=\\\"btn\\\" [disabled]=\\\"!selected_finding\\\" (click)=\\\"deleteFindingModal = true\\\">\\n                        <clr-icon shape=\\\"trash\\\"></clr-icon> Delete Finding\\n                    </button>                    \\n                </div>\\n                <button class=\\\"btn\\\" [disabled]=\\\"!selected_finding\\\" (click)=\\\"toggleFindingDone(selected_finding)\\\">\\n                    <clr-icon shape=\\\"check\\\"></clr-icon> Toggle Done\\n                </button>\\n            </clr-dg-action-bar>\\n            <clr-dg-placeholder>No findings found!</clr-dg-placeholder>\\n            <clr-dg-column [clrDgField]=\\\"'name'\\\">Name<clr-dg-string-filter [clrDgStringFilter]=\\\"findingFilter\\\">\\n                </clr-dg-string-filter>\\n            </clr-dg-column>\\n            <clr-dg-column [clrDgField]=\\\"'Done'\\\">Done<clr-dg-string-filter [clrDgStringFilter]=\\\"FindingCheckedFilter\\\">\\n                </clr-dg-string-filter>\\n            </clr-dg-column>\\n            <clr-dg-row *clrDgItems=\\\"let finding of findings\\\" [clrDgItem]=\\\"finding\\\">\\n                <clr-dg-cell>{{finding.name}}</clr-dg-cell>\\n                <clr-dg-cell>\\n                    <div *ngIf=\\\"finding.checked === 1\\\">\\n                        <clr-icon shape=\\\"check\\\"></clr-icon>\\n                    </div>\\n                </clr-dg-cell>\\n            </clr-dg-row>\\n            <clr-dg-footer>\\n                <clr-dg-pagination #finding_pagination [clrDgPageSize]=\\\"25\\\">\\n                    {{finding_pagination.firstItem + 1}} - {{finding_pagination.lastItem + 1}} of\\n                    {{finding_pagination.totalItems}} findings\\n                </clr-dg-pagination>\\n            </clr-dg-footer>\\n        </clr-datagrid>\\n    </div>\\n    <div class=\\\"clr-col\\\">\\n        <clr-datagrid [(clrDgSelected)]=\\\"selected_services\\\" [clrDgRowSelection]=\\\"true\\\" class=\\\"datagrid-compact\\\">\\n            <clr-dg-action-bar>\\n                <div class=\\\"btn-group\\\">\\n                    <button [disabled]=\\\"!selected_finding\\\" class=\\\"btn\\\" (click)=\\\"notYetImplementedModal = true\\\">\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon> Add Service\\n                    </button>\\n                    <button [disabled]=\\\"!selected_services.length > 0\\\" class=\\\"btn\\\" (click)=\\\"notYetImplementedModal = true\\\">\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon> Edit Service\\n                    </button>\\n                    <button [disabled]=\\\"!selected_services.length > 0\\\" class=\\\"btn\\\" (click)=\\\"notYetImplementedModal = true\\\">\\n                        <clr-icon shape=\\\"trash\\\"></clr-icon> Delete Service\\n                    </button>\\n                </div>\\n                <div class=\\\"btn-group\\\">\\n                    <button [disabled]=\\\"!selected_services.length > 0\\\" class=\\\"btn\\\" (click)=\\\"generatePocModal = true\\\">\\n                        <clr-icon shape=\\\"play\\\"></clr-icon> Generate PoC\\n                    </button>\\n                </div>\\n            </clr-dg-action-bar>\\n            <clr-dg-placeholder>No services found!</clr-dg-placeholder>\\n            <clr-dg-column [clrDgField]=\\\"'host'\\\">IP<clr-dg-string-filter [clrDgStringFilter]=\\\"hostFilter\\\">\\n                </clr-dg-string-filter>\\n            </clr-dg-column>\\n            <clr-dg-column [clrDgField]=\\\"'fqdn'\\\">FQDN<clr-dg-string-filter [clrDgStringFilter]=\\\"hostFilter\\\">\\n            </clr-dg-string-filter>\\n        </clr-dg-column>\\n            <clr-dg-column [clrDgField]=\\\"'port'\\\">Port<clr-dg-string-filter [clrDgStringFilter]=\\\"portFilter\\\">\\n                </clr-dg-string-filter>\\n            </clr-dg-column>\\n            <clr-dg-column [clrDgField]=\\\"'name'\\\">Type<clr-dg-string-filter [clrDgStringFilter]=\\\"typeFilter\\\">\\n                </clr-dg-string-filter>\\n            </clr-dg-column>\\n            <clr-dg-column [clrDgField]=\\\"'haspoc'\\\">Has POC<clr-dg-string-filter [clrDgStringFilter]=\\\"typeFilter\\\">\\n                </clr-dg-string-filter>\\n            </clr-dg-column>\\n            <clr-dg-column [clrDgField]=\\\"'haspoc'\\\">FP<clr-dg-string-filter [clrDgStringFilter]=\\\"typeFilter\\\">\\n                </clr-dg-string-filter>\\n            </clr-dg-column>\\n            <clr-dg-column>PoC's</clr-dg-column>\\n            <div *ngIf=\\\"selected_finding\\\">\\n                <clr-dg-row *clrDgItems=\\\"let service of finding_services\\\" [clrDgItem]=\\\"service\\\">\\n                    <clr-dg-cell>{{service.host.ip}}</clr-dg-cell>\\n                    <clr-dg-cell>{{service.host.fqdn}}</clr-dg-cell>\\n                    <clr-dg-cell>{{service.port}}</clr-dg-cell>\\n                    <clr-dg-cell>{{service.name}}</clr-dg-cell>\\n                    <clr-dg-cell>\\n                        <div *ngIf=\\\"service.haspoc === 1; else no_poc\\\">\\n                            <clr-icon shape=\\\"check\\\" (click)=\\\"setHasPoc(service)\\\"></clr-icon>\\n                        </div>\\n                        <ng-template #no_poc>\\n                            <clr-icon shape=\\\"times\\\" (click)=\\\"setHasPoc(service)\\\"></clr-icon>\\n                        </ng-template>\\n                    </clr-dg-cell>\\n                    <clr-dg-cell>\\n                        <div *ngIf=\\\"service.falsepositive === 1; else falsepositive\\\">\\n                            <clr-icon shape=\\\"check\\\" (click)=\\\"setFalsePositive(service)\\\"></clr-icon>\\n                        </div>\\n                        <ng-template #falsepositive>\\n                            <clr-icon shape=\\\"times\\\" (click)=\\\"setFalsePositive(service)\\\"></clr-icon>\\n                        </ng-template>\\n                    </clr-dg-cell>\\n                    <clr-dg-cell>\\n                        <clr-icon shape=\\\"pop-out\\\" (click)=\\\"viewPocs(service)\\\"></clr-icon>\\n                    </clr-dg-cell>\\n                </clr-dg-row>\\n            </div>\\n            <clr-dg-footer>\\n                <clr-dg-pagination #poc_pagination [clrDgPageSize]=\\\"25\\\">\\n                    {{poc_pagination.firstItem + 1}} - {{poc_pagination.lastItem + 1}} of\\n                    {{poc_pagination.totalItems}} services\\n                </clr-dg-pagination>\\n            </clr-dg-footer>\\n        </clr-datagrid>\\n    </div>\\n\\n</div>\\n\\n<clr-modal [(clrModalOpen)]=\\\"generatePocModal\\\" [clrModalSize]=\\\"'lg'\\\">\\n    <h3 class=\\\"modal-title\\\">Generate PoC</h3>\\n    <div class=\\\"modal-body\\\">\\n        <clr-datagrid [(clrDgSingleSelected)]=\\\"selected_tool\\\"\\n            (clrDgSingleSelectedChange)=\\\"SetThreads(selected_tool.threads)\\\" [clrDgRowSelection]=\\\"true\\\">>\\n            <clr-dg-placeholder>No tools found!</clr-dg-placeholder>\\n            <clr-dg-column [clrDgField]=\\\"'name'\\\">Name\\n                <clr-dg-string-filter [clrDgStringFilter]=\\\"toolFilter\\\"></clr-dg-string-filter>\\n            </clr-dg-column>\\n            <clr-dg-column [clrDgField]=\\\"'commandstring'\\\">Commandstring\\n                <clr-dg-string-filter [clrDgStringFilter]=\\\"commandstringFilter\\\"></clr-dg-string-filter>\\n            </clr-dg-column>\\n            <clr-dg-row *clrDgItems=\\\"let tool of tools\\\" [clrDgItem]=\\\"tool\\\">\\n                <clr-dg-cell>{{tool.name}}</clr-dg-cell>\\n                <clr-dg-cell>{{tool.commandstring}}</clr-dg-cell>\\n            </clr-dg-row>\\n            <clr-dg-footer>\\n                <clr-dg-pagination #tool_pagination [clrDgPageSize]=\\\"20\\\">\\n                    {{tool_pagination.firstItem + 1}} - {{tool_pagination.lastItem + 1}} of\\n                    {{tool_pagination.totalItems}} tools\\n                </clr-dg-pagination>\\n            </clr-dg-footer>\\n        </clr-datagrid>\\n        <form clrForm>\\n            <section class=\\\"form-block\\\">\\n                <clr-input-container>\\n                    <label>Threads</label><input clrInput [(ngModel)]=\\\"task_threads\\\" name=\\\"threadsInput\\\" type=\\\"text\\\"\\n                        id=\\\"requiredInput\\\" placeholder=\\\"# of threads\\\">\\n                    <clr-control-error>This field is required!</clr-control-error>\\n                </clr-input-container>\\n            </section>\\n        </form>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" [disabled]=\\\"!task_threads\\\" class=\\\"btn btn-primary\\\"\\n            (click)=\\\"generatePocModal = false; AddTask()\\\">Ok</button>\\n    </div>\\n</clr-modal>\\n\\n\\n<clr-modal [(clrModalOpen)]=\\\"viewPocModal\\\" [clrModalStaticBackdrop]=\\\"false\\\" [clrModalSize]=\\\"'xl'\\\">\\n    <h3 class=\\\"modal-title\\\" *ngIf=\\\"selected_finding && selected_service && selected_service.host\\\">\\n        {{selected_finding.name}}\\n        ({{selected_service.host.ip}}:{{selected_service.port}})</h3>\\n    <div class=\\\"modal-body\\\" height=\\\"600px\\\" id=\\\"pocmodal\\\">\\n\\n        <clr-accordion>\\n            <clr-accordion-panel *ngFor=\\\"let poc of service_pocs\\\">\\n                <clr-accordion-title>\\n                    {{poc.info}}\\n                    <span style=\\\"float: right;\\\">\\n                        <button type=\\\"button\\\" title=\\\"Copy To Clipboard\\\" class=\\\"btn btn-icon btn-primary btn-sm\\\"\\n                            aria-label=\\\"settings\\\" (click)=\\\"copyToClipboard(poc.poc)\\\">\\n                            <clr-icon shape=\\\"copy\\\"></clr-icon>\\n                        </button>\\n                    </span>\\n                </clr-accordion-title>\\n                <clr-accordion-content *clrIfExpanded>\\n                    <textarea name=\\\"description\\\" rows=\\\"15\\\" cols=\\\"100\\\">{{poc.poc}}</textarea>\\n                </clr-accordion-content>\\n            </clr-accordion-panel>\\n        </clr-accordion>\\n    </div>\\n\\n\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"viewPocModal = false\\\">Ok</button>\\n    </div>\\n\\n</clr-modal>\\n\\n\\n<clr-modal [(clrModalOpen)]=\\\"addFindingModal\\\" [clrModalStaticBackdrop]=\\\"false\\\" [clrModalSize]=\\\"'lg'\\\">\\n    <h3 class=\\\"modal-title\\\">Add finding</h3>\\n    <div class=\\\"modal-body\\\" height=\\\"600px\\\" id=\\\"pocmodal\\\">\\n        <form clrForm>\\n            <clr-input-container>\\n                <label>Finding name</label>\\n                <input clrInput placeholder=\\\"Enter finding name...\\\" name=\\\"name\\\" [(ngModel)]=\\\"newFindingName\\\" required />\\n                <clr-control-error>This field is required!</clr-control-error>\\n            </clr-input-container>\\n        </form>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"addFindingModal = false\\\">Cancel</button>\\n        <button type=\\\"button\\\" [disabled]=\\\"!newFindingName\\\" class=\\\"btn btn-primary\\\"\\n            (click)=\\\"addFindingModal = false; AddFinding(newFindingName)\\\">Add</button>\\n    </div>\\n</clr-modal>\\n\\n<clr-modal [(clrModalOpen)]=\\\"deleteFindingModal\\\">\\n    <h3 class=\\\"modal-title\\\">Delete finding?</h3>\\n    <div class=\\\"modal-body\\\">\\n        <p *ngIf=\\\"selected_finding\\\">Are you sure you want to delete finding \\\"<b>{{selected_finding.name}}</b>\\\"?</p>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"deleteFindingModal = false\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\"\\n            (click)=\\\"deleteFinding(selected_finding); deleteFindingModal = false\\\">Delete</button>\\n    </div>\\n</clr-modal>\\n\\n<clr-modal [(clrModalOpen)]=\\\"editFindingModal\\\" [clrModalStaticBackdrop]=\\\"false\\\" [clrModalSize]=\\\"'lg'\\\">\\n    <h3 class=\\\"modal-title\\\">Edit finding</h3>\\n    <div class=\\\"modal-body\\\" height=\\\"600px\\\" id=\\\"pocmodal\\\">\\n        <form clrForm>\\n            <clr-input-container>\\n                <p *ngIf=\\\"selected_finding\\\">Editing \\\"<b>{{selected_finding.name}}</b>\\\"...</p>\\n                <label>Finding name</label>\\n                <input *ngIf=\\\"selected_finding\\\" clrInput placeholder=\\\"Enter finding name...\\\" name=\\\"name\\\"\\n                    [(ngModel)]=\\\"selected_finding.name\\\" required />\\n                <clr-control-error>This field is required!</clr-control-error>\\n            </clr-input-container>\\n        </form>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"editFindingModal = false\\\">Cancel</button>\\n        <button *ngIf=\\\"selected_finding\\\" type=\\\"button\\\" [disabled]=\\\"!selected_finding.name\\\" class=\\\"btn btn-primary\\\"\\n            (click)=\\\"editFindingModal = false; editFinding(selected_finding)\\\">Edit</button>\\n    </div>\\n</clr-modal>\\n\\n<clr-modal [(clrModalOpen)]=\\\"addServiceModal\\\" [clrModalStaticBackdrop]=\\\"false\\\" [clrModalSize]=\\\"'lg'\\\">\\n    <h3 class=\\\"modal-title\\\">Add service</h3>\\n    <div class=\\\"modal-body\\\" height=\\\"600px\\\" id=\\\"pocmodal\\\">\\n        <h5 class=\\\"modal-title\\\">Host</h5>\\n        <form clrForm>\\n            <clr-input-container>\\n                <label>IP address</label>\\n                <input clrInput placeholder=\\\"e.g. 192.168.0.1\\\" name=\\\"ip\\\" [(ngModel)]=\\\"newHostIP\\\" required />\\n                <clr-control-error>This field is required!</clr-control-error>\\n            </clr-input-container>\\n            <clr-input-container>\\n                <label>FQDN</label>\\n                <input clrInput placeholder=\\\"e.g. example.com\\\" name=\\\"fqdn\\\" [(ngModel)]=\\\"newHostFQDN\\\" />\\n            </clr-input-container>\\n            <clr-input-container>\\n                <label>MAC address</label>\\n                <input clrInput placeholder=\\\"e.g. 00:0a:95:9d:68:16\\\" name=\\\"mac\\\" [(ngModel)]=\\\"newHostMAC\\\" />\\n            </clr-input-container>\\n            <clr-input-container>\\n                <label>Operating System</label>\\n                <input clrInput placeholder=\\\"e.g. Windows Server 2012\\\" name=\\\"os\\\" [(ngModel)]=\\\"newHostOS\\\" />\\n            </clr-input-container>\\n        </form>\\n        <h5 class=\\\"modal-title\\\">Service</h5>\\n        <form clrForm>\\n            <clr-input-container>\\n                <label>Service name</label>\\n                <input clrInput placeholder=\\\"e.g. www or rdp\\\" name=\\\"servicename\\\" [(ngModel)]=\\\"newServiceName\\\"\\n                    required />\\n                <clr-control-error>This field is required!</clr-control-error>\\n            </clr-input-container>\\n            <clr-input-container>\\n                <label>Port</label>\\n                <input clrInput placeholder=\\\"Enter finding name...\\\" name=\\\"serviceport\\\" [(ngModel)]=\\\"newServicePort\\\"\\n                    required />\\n                <clr-control-error>This field is required!</clr-control-error>\\n            </clr-input-container>\\n            <clr-select-container>\\n                <label>Protocol</label>\\n                <select clrSelect name=\\\"serviceprotocol\\\" [(ngModel)]=\\\"newServiceProtocol\\\" required>\\n                    <option value=\\\"tcp\\\">tcp</option>\\n                    <option value=\\\"udp\\\">udp</option>\\n                </select>\\n                <clr-control-error>This field is required!</clr-control-error>\\n            </clr-select-container>\\n        </form>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"addServiceModal = false\\\">Cancel</button>\\n        <button type=\\\"button\\\" [disabled]=\\\"!newServiceName\\\" class=\\\"btn btn-primary\\\"\\n            (click)=\\\"addServiceModal = false; addService(newFindingName)\\\">Add</button>\\n    </div>\\n</clr-modal>\\n\\n\\n<clr-modal [(clrModalOpen)]=\\\"notYetImplementedModal\\\" [clrModalStaticBackdrop]=\\\"false\\\" [clrModalSize]=\\\"'lg'\\\">\\n    <h3 class=\\\"modal-title\\\">Feature not yet implemented</h3>\\n    <div class=\\\"modal-body\\\">\\n      Please forward your complaints or requests to /dev/null\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"notYetImplementedModal = false\\\">Kusje van de boys</button>\\n    </div>\\n  </clr-modal>\"","module.exports = \"<h1>Home</h1><br>\\nPlease note that this is a beta version of ATLAS which is<br>\\nstill undergoing final testing before its official release. The<br>\\nplatform, its software and all content found on it are provided on an<br>\\n“as is” and “as available” basis. ATLAS does not give any warranties,<br>\\nwhether express or implied, as to the suitability or usability of the<br>\\nwebsite, its software or any of its content.<br><br>\\n\\nATLAS will not be liable for any loss, whether such loss is direct,<br>\\nindirect, special or consequential, suffered by any party as a result<br>\\nof their use of ATLAS, its software or content. Any<br>\\ndownloading or uploading of material to the website is done at the<br>\\nuser’s own risk and the user will be solely responsible for any<br>\\ndamage to any computer system or loss of data that results from such<br>\\nactivities.<br><br>\\n\\nShould you encounter any bugs, glitches, lack of functionality or<br>\\nother problems on the website, please let us know immediately so we<br>\\ncan rectify these accordingly. Your help in this regard is greatly<br>\\nappreciated! You can write to us at this address noreply@10minutemail.com.<br>\"","module.exports = \"<div class=\\\"clr-row\\\">\\n    <div class=\\\"clr-col-4\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-block\\\">\\n                <h4 class=\\\"card-title\\\">Nessus import</h4>\\n                <p class=\\\"card-text\\\"><label class=\\\"btn btn-outline\\\">\\n                       <form #NessusForm=\\\"ngForm\\\"> <input id=\\\"inputfile\\\" type=\\\"file\\\" class=\\\"button-input\\\" (change)=\\\"selectFile($event); \\\" accept=\\\".nessus\\\" placeholder=\\\"Upload file\\\"></form>\\n                    </label></p>                      \\n                                  \\n            </div>\\n            <div class=\\\"card-footer\\\">\\n                    <ng-container *ngIf=\\\"uploading; then progress; else noprogress\\\"></ng-container>\\n\\n                        <ng-template #progress>                                \\n                                <ng-container *ngIf=\\\"success; then success; else nosuccess\\\"></ng-container>\\n                                <ng-template #success>                                \\n                                        <div class=\\\"progress success\\\"><progress value=\\\"100\\\" max=\\\"100\\\"></progress>\\n                                        </div>     \\n                                    </ng-template>  \\n                                <ng-template #nosuccess>                                \\n                                    <div class=\\\"progress loop\\\"><progress></progress>\\n                                    </div>     \\n                                </ng-template>   \\n                        </ng-template>  \\n\\n                        <ng-template #noprogress>                                \\n                            <div class=\\\"progress static\\\"><progress value=\\\"0\\\" max=\\\"100\\\"></progress>\\n                            </div>     \\n                        </ng-template>     \\n                    <button class=\\\"btn btn-primary\\\" [disabled]=\\\"uploading && !success\\\" (click)=\\\"upload()\\\">Upload</button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"clr-col-4\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-block\\\">\\n                <h4 class=\\\"card-title\\\">Current imports</h4>\\n<clr-datagrid>\\n    <clr-dg-placeholder>No imports found!</clr-dg-placeholder>\\n    <clr-dg-column [clrDgField]=\\\"'name'\\\">Name</clr-dg-column>\\n    <clr-dg-column [clrDgField]=\\\"'name'\\\">State</clr-dg-column>\\n    <clr-dg-row *clrDgItems=\\\"let import of imports\\\" [clrDgItem]=\\\"import\\\">\\n      <clr-dg-cell>{{import.name}}</clr-dg-cell>\\n      <clr-dg-cell>\\n        <span *ngIf=\\\"import.running; else done\\\" class=\\\"spinner spinner-inline\\\"></span>\\n        <ng-template #done>\\n          <clr-icon shape=\\\"check\\\"></clr-icon>\\n        </ng-template></clr-dg-cell>\\n    </clr-dg-row>\\n  </clr-datagrid>\\n  </div>\\n</div>\\n</div>\\n</div>\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs\\\">\\n    <clr-datagrid [(clrDgSingleSelected)]=\\\"selected_task\\\" [clrDgRowSelection]=\\\"true\\\">\\n      <clr-dg-placeholder>No tasks found!</clr-dg-placeholder>\\n      <clr-dg-column [clrDgField]=\\\"'name'\\\">Name\\n        <clr-dg-string-filter [clrDgStringFilter]=\\\"taskFilter\\\"></clr-dg-string-filter>\\n      </clr-dg-column>\\n      <clr-dg-column [clrDgField]=\\\"'starttime'\\\">Starttime\\n        <clr-dg-string-filter [clrDgStringFilter]=\\\"taskFilter\\\"></clr-dg-string-filter>\\n      </clr-dg-column>\\n      <clr-dg-column [clrDgField]=\\\"'tool'\\\">Tool\\n        <clr-dg-string-filter [clrDgStringFilter]=\\\"toolFilter\\\"></clr-dg-string-filter>\\n      </clr-dg-column>\\n      <clr-dg-column [clrDgField]=\\\"'completedtargets'\\\"># Completed\\n        <clr-dg-string-filter [clrDgStringFilter]=\\\"completedtargetsfilter\\\"></clr-dg-string-filter>\\n      </clr-dg-column>\\n      <clr-dg-column [clrDgField]=\\\"'completedtargets'\\\">Run\\n        <clr-dg-string-filter [clrDgStringFilter]=\\\"completedtargetsfilter\\\"></clr-dg-string-filter>\\n      </clr-dg-column>\\n      <clr-dg-column [clrDgField]=\\\"'completedtargets'\\\">Error\\n        <clr-dg-string-filter [clrDgStringFilter]=\\\"completedtargetsfilter\\\"></clr-dg-string-filter>\\n      </clr-dg-column>\\n      <clr-dg-row *clrDgItems=\\\"let task of tasks\\\" [clrDgItem]=\\\"task\\\">\\n        <clr-dg-cell>{{task.id}}</clr-dg-cell>\\n        <clr-dg-cell>{{task.starttime | date:'h:mm:ss, d LLL'}}</clr-dg-cell>\\n        <clr-dg-cell>NYI</clr-dg-cell>\\n        <clr-dg-cell>{{task.targets_completed}} / {{task.services.length}}</clr-dg-cell>\\n        <clr-dg-cell>\\n          <span *ngIf=\\\"task.running; else run\\\" class=\\\"spinner spinner-inline\\\"></span>\\n          <ng-template #run>\\n            <clr-icon shape=\\\"play\\\" (click)=\\\"loading=true; StartTask(task)\\\"></clr-icon> Run\\n          </ng-template>\\n        </clr-dg-cell>\\n        <clr-dg-cell>\\n          <a role=\\\"tooltip\\\" aria-haspopup=\\\"true\\\" class=\\\"tooltip tooltip-lg tooltip-top-left\\\">\\n            <clr-icon *ngIf=\\\"task.errormessage\\\" shape=\\\"error-circle\\\" class=\\\"is-error\\\" (click)=\\\"errorModal = true\\\">\\n            </clr-icon><span class=\\\"tooltip-content\\\">{{task.errormessage}}</span>\\n          </a>\\n        </clr-dg-cell>\\n      </clr-dg-row>\\n      <clr-dg-footer>\\n        <clr-dg-pagination #task_pagination [clrDgPageSize]=\\\"20\\\">\\n          {{task_pagination.firstItem + 1}} - {{task_pagination.lastItem + 1}} of {{task_pagination.totalItems}} tasks\\n        </clr-dg-pagination>\\n      </clr-dg-footer>\\n    </clr-datagrid>\\n  </div>\\n</div>\\n\\n<button type=\\\"button\\\" class=\\\"btn btn-icon btn-primary\\\" aria-label=\\\"settings\\\" (click)=\\\"GetTasks()\\\">\\n    <clr-icon shape=\\\"refresh\\\"></clr-icon> Refresh\\n</button>\\n\\n<clr-modal [(clrModalOpen)]=\\\"errorModal\\\" [clrModalSize]=\\\"'lg'\\\">\\n  <h3 *ngIf=\\\"selected_task\\\" class=\\\"modal-title\\\">Task {{selected_task.id}} error log</h3>\\n  <div class=\\\"modal-body\\\">\\n    <textarea *ngIf=\\\"selected_task\\\" name=\\\"description\\\" rows=\\\"15\\\" cols=\\\"90\\\">{{selected_task.errormessage}}</textarea>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"errorModal = false\\\">Ok</button>\\n  </div>\\n</clr-modal>\"","module.exports = \"<form class=\\\"clr-form\\\">\\n    <div class=\\\"clr-form-control\\\">\\n        <label class=\\\"clr-control-label\\\">Basic</label>\\n        <div class=\\\"clr-control-container\\\">\\n            <div class=\\\"clr-file-wrapper\\\">\\n                <label for=\\\"basic\\\" class=\\\"clr-control-label\\\"><span class=\\\"btn btn-sm\\\">browse</span></label>\\n                <input type=\\\"file\\\" id=\\\"basic\\\" placeholder=\\\"Enter value here\\\" class=\\\"clr-file\\\">\\n            </div>\\n            <!-- IMPORTANT DIFFERENCE IN STRUCTURE! ICON IS NOT PART OF THE INPUT WRAPPER -->\\n            <clr-icon class=\\\"clr-validate-icon\\\" shape=\\\"exclamation-circle\\\"></clr-icon>\\n            <span class=\\\"clr-subtext\\\">Helper Text</span>\\n        </div>\\n    </div>\\n    \\n    <div class=\\\"clr-form-control\\\">\\n        <label for=\\\"basic-default\\\" class=\\\"clr-control-label\\\">Basic default</label>\\n        <div class=\\\"clr-control-container\\\">\\n            <div class=\\\"clr-file-wrapper\\\">\\n                <input type=\\\"file\\\" id=\\\"basic-default\\\" placeholder=\\\"Enter value here\\\">\\n            </div>\\n            <!-- IMPORTANT DIFFERENCE IN STRUCTURE! ICON IS NOT PART OF THE INPUT WRAPPER -->\\n            <clr-icon class=\\\"clr-validate-icon\\\" shape=\\\"exclamation-circle\\\"></clr-icon>\\n            <span class=\\\"clr-subtext\\\">Helper Text</span>\\n        </div>\\n    </div>\\n    \\n    <div class=\\\"clr-form-control\\\">\\n        <label class=\\\"clr-control-label\\\">Error</label>\\n        <div class=\\\"clr-control-container clr-error\\\">\\n            <div class=\\\"clr-file-wrapper\\\">\\n                <label for=\\\"error\\\" class=\\\"clr-control-label\\\"><span class=\\\"btn btn-sm\\\">browse</span></label>\\n                <input type=\\\"file\\\" id=\\\"error\\\" placeholder=\\\"Enter value here\\\" class=\\\"clr-file\\\">\\n            </div>\\n            <!-- IMPORTANT DIFFERENCE IN STRUCTURE! ICON IS NOT PART OF THE INPUT WRAPPER -->\\n            <clr-icon class=\\\"clr-validate-icon\\\" shape=\\\"exclamation-circle\\\"></clr-icon>\\n            <span class=\\\"clr-subtext\\\">Helper Text</span>\\n        </div>\\n    </div>\\n    \\n    <div class=\\\"clr-form-control\\\">\\n        <label for=\\\"error-default\\\" class=\\\"clr-control-label\\\">Error default</label>\\n        <div class=\\\"clr-control-container clr-error\\\">\\n            <div class=\\\"clr-file-wrapper\\\">\\n                <input type=\\\"file\\\" id=\\\"error-default\\\" placeholder=\\\"Enter value here\\\">\\n            </div>\\n            <!-- IMPORTANT DIFFERENCE IN STRUCTURE! ICON IS NOT PART OF THE INPUT WRAPPER -->\\n            <clr-icon class=\\\"clr-validate-icon\\\" shape=\\\"exclamation-circle\\\"></clr-icon>\\n            <span class=\\\"clr-subtext\\\">Helper Text</span>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"clr-form-control clr-form-control-disabled\\\">\\n        <label class=\\\"clr-control-label\\\">Disabled</label>\\n        <div class=\\\"clr-control-container clr-error\\\">\\n            <div class=\\\"clr-file-wrapper\\\">\\n                <label for=\\\"disabled\\\" class=\\\"clr-control-label\\\"><span class=\\\"btn btn-sm\\\">browse</span></label>\\n                <input type=\\\"file\\\" id=\\\"disaled\\\" disabled placeholder=\\\"Enter value here\\\" class=\\\"clr-file\\\">\\n            </div>\\n            <!-- IMPORTANT DIFFERENCE IN STRUCTURE! ICON IS NOT PART OF THE INPUT WRAPPER -->\\n            <clr-icon class=\\\"clr-validate-icon\\\" shape=\\\"exclamation-circle\\\"></clr-icon>\\n            <span class=\\\"clr-subtext\\\">Helper Text</span>\\n        </div>\\n    </div>\\n    \\n    <div class=\\\"clr-form-control clr-form-control-disabled\\\">\\n        <label for=\\\"disabled-default\\\" class=\\\"clr-control-label\\\">Disabled default</label>\\n        <div class=\\\"clr-control-container clr-error\\\">\\n            <div class=\\\"clr-file-wrapper\\\">\\n                <input type=\\\"file\\\" id=\\\"disabled-default\\\" disabled placeholder=\\\"Enter value here\\\">\\n            </div>\\n            <!-- IMPORTANT DIFFERENCE IN STRUCTURE! ICON IS NOT PART OF THE INPUT WRAPPER -->\\n            <clr-icon class=\\\"clr-validate-icon\\\" shape=\\\"exclamation-circle\\\"></clr-icon>\\n            <span class=\\\"clr-subtext\\\">Helper Text</span>\\n        </div>\\n    </div>\\n</form>\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs\\\">\\n    <clr-datagrid [(clrDgSingleSelected)]=\\\"selected_tool\\\" [clrDgRowSelection]=\\\"true\\\">\\n      <clr-dg-action-bar>\\n        <div class=\\\"btn-group\\\">\\n          <button class=\\\"btn\\\" (click)=\\\"form_tool = {}; wizardLarge.reset(); lgOpen = true; new_tool = true;\\\">\\n            <clr-icon shape=\\\"plus\\\"></clr-icon> Add Tool\\n          </button>\\n          <button class=\\\"btn\\\" [disabled]=\\\"! selected_tool\\\"\\n            (click)=\\\"wizardLarge.reset(); test_target=''; test_port=''; lgOpen = true; new_tool = false; form_tool = selected_tool;  ParseCommand()\\\">\\n            <clr-icon shape=\\\"pencil\\\"></clr-icon> Edit Tool\\n          </button>\\n          <button class=\\\"btn\\\" [disabled]=\\\"! selected_tool\\\" (click)=\\\"deleteToolModal = true\\\">\\n            <clr-icon shape=\\\"trash\\\"></clr-icon> Delete Tool\\n          </button>\\n        </div>\\n      </clr-dg-action-bar>\\n      <clr-dg-placeholder>No tools found!</clr-dg-placeholder>\\n      <clr-dg-column [clrDgField]=\\\"'name'\\\">Name\\n        <clr-dg-string-filter [clrDgStringFilter]=\\\"toolFilter\\\"></clr-dg-string-filter>\\n      </clr-dg-column>\\n      <clr-dg-column [clrDgField]=\\\"'info'\\\">Info</clr-dg-column>\\n      <clr-dg-row *clrDgItems=\\\"let tool of tools\\\" [clrDgItem]=\\\"tool\\\">\\n        <clr-dg-cell>{{tool.name}}</clr-dg-cell>\\n        <clr-dg-cell>\\n          <a role=\\\"tooltip\\\" aria-haspopup=\\\"true\\\" class=\\\"tooltip tooltip-lg tooltip-top-left\\\">\\n            <clr-icon shape=\\\"info-circle\\\" class=\\\"is-info\\\" (click)=\\\"infoModal = true\\\">\\n            </clr-icon><span class=\\\"tooltip-content\\\"><b>Name: </b>{{tool.name}} <br>\\n              <b>Execution string: </b>{{tool.commandstring}} <br>\\n              <b>Expected good: </b>{{tool.expected_good}} <br>\\n              <b>Expected bad: </b>{{tool.expected_bad}} <br>\\n              <b>Timeout: </b>{{tool.timeout}} <br></span>\\n          </a>\\n        </clr-dg-cell>\\n      </clr-dg-row>\\n      <clr-dg-footer>\\n        <clr-dg-pagination #tool_pagination [clrDgPageSize]=\\\"20\\\">\\n          {{tool_pagination.firstItem + 1}} - {{tool_pagination.lastItem + 1}} of {{tool_pagination.totalItems}} tools\\n        </clr-dg-pagination>\\n      </clr-dg-footer>\\n    </clr-datagrid>\\n  </div>\\n</div>\\n\\n<clr-wizard #wizardlg [(clrWizardOpen)]=\\\"lgOpen\\\" clrWizardSize=\\\"xl\\\">\\n  <clr-wizard-title>\\n    <div *ngIf=\\\"new_tool;else edit_tool\\\">Add Tool</div>\\n    <ng-template #edit_tool>Edit tool</ng-template>\\n  </clr-wizard-title>\\n\\n  <clr-wizard-button [type]=\\\"'cancel'\\\">Cancel</clr-wizard-button>\\n  <clr-wizard-button [type]=\\\"'previous'\\\">Back</clr-wizard-button>\\n  <clr-wizard-button [type]=\\\"'next'\\\">Next</clr-wizard-button>\\n  <clr-wizard-button [type]=\\\"'finish'\\\" (click)=\\\"FinishWizard(form_tool);\\\">Finish</clr-wizard-button>\\n\\n  <clr-wizard-page\\n    [clrWizardPageNextDisabled]=\\\"(name.pristine || commandstring.pristine || !toolForm.valid) && new_tool\\\">\\n    <ng-template clrPageTitle>Tool settings</ng-template>\\n    <form clrForm #toolForm=\\\"ngForm\\\">\\n      <section class=\\\"form-block\\\">\\n\\n        <clr-input-container>\\n          <label>Name</label>\\n          <input placeholder=\\\"Name\\\" clrInput [(ngModel)]=\\\"form_tool.name\\\" name=\\\"name\\\" id=\\\"name\\\" #name=\\\"ngModel\\\"\\n            required />\\n          <clr-control-error>This field is required!</clr-control-error>\\n        </clr-input-container>\\n        <clr-input-container>\\n          <label>Command string</label>\\n          <input placeholder=\\\"nmap <host> -p <port>\\\" clrInput [(ngModel)]=\\\"form_tool.commandstring\\\" name=\\\"commandstring\\\"\\n            #commandstring=\\\"ngModel\\\" id=\\\"commandstring\\\" required size=\\\"70\\\" />\\n          <clr-control-error>This field is required!</clr-control-error>\\n        </clr-input-container>\\n\\n        <clr-input-container>\\n          <label>Expected good</label>\\n          <input clrInput [(ngModel)]=\\\"form_tool.expected_good\\\" name=\\\"expected_good\\\" size=\\\"70\\\" />\\n        </clr-input-container>\\n\\n        <clr-input-container>\\n          <label>Expected bad</label>\\n          <input clrInput [(ngModel)]=\\\"form_tool.expected_bad\\\" name=\\\"expected_bad\\\" size=\\\"70\\\" />\\n        </clr-input-container>\\n\\n        <clr-input-container>\\n          <label>Timeout</label>\\n          <input clrInput [(ngModel)]=\\\"form_tool.timeout\\\" name=\\\"timeout\\\" />\\n        </clr-input-container>\\n\\n        <clr-input-container>\\n          <label>Threads</label>\\n          <input clrInput [(ngModel)]=\\\"form_tool.threads\\\" name=\\\"threads\\\" />\\n        </clr-input-container>\\n\\n      </section>\\n    </form>\\n  </clr-wizard-page>\\n  <clr-wizard-page>\\n    <ng-template clrPageTitle>Test settings</ng-template>\\n    <form>\\n      <section class=\\\"form-block\\\">\\n        <!-- Test options here -->\\n\\n        <clr-input-container>\\n          <label>Target</label>\\n          <input clrInput (keyup)=\\\"ParseCommand()\\\" [(ngModel)]=\\\"test_target\\\" #target name=\\\"target\\\" type=\\\"text\\\"\\n            id=\\\"target\\\" placeholder=\\\"e.g. 192.168.1.53\\\" required>\\n        </clr-input-container>\\n\\n        <clr-input-container>\\n          <label>Port</label>\\n          <input clrInput (keyup)=\\\"ParseCommand()\\\" [(ngModel)]=\\\"test_port\\\" name=\\\"port\\\" type=\\\"text\\\" id=\\\"port\\\"\\n            placeholder=\\\"443\\\">\\n        </clr-input-container>\\n\\n        <clr-input-container>\\n          <label>Command to be executed</label>\\n          <input clrInput [(ngModel)]=\\\"test_commandstring\\\" name=\\\"test_commandstring\\\" type=\\\"text\\\" id=\\\"port\\\"\\n            placeholder=\\\"443\\\" size=\\\"70\\\">\\n        </clr-input-container>\\n\\n        <div class=\\\"form-group\\\">\\n          <button [disabled]=\\\"!target\\\" class=\\\"btn btn-outline\\\" (click)=\\\"loading=true; Execute()\\\">\\n            <span *ngIf=\\\"loading; else run\\\" class=\\\"spinner spinner-inline\\\"></span>\\n            <ng-template #run>\\n              <clr-icon shape=\\\"play\\\"></clr-icon> Run\\n            </ng-template>\\n          </button>\\n        </div>\\n      </section>\\n    </form>\\n  </clr-wizard-page>\\n</clr-wizard>\\n<clr-modal [(clrModalOpen)]=\\\"testoutputModalOpen\\\" [clrModalSize]=\\\"'lg'\\\">\\n  <h3 class=\\\"modal-title\\\">Test output</h3>\\n  <div class=\\\"modal-body\\\">\\n    <textarea clrTextarea [(ngModel)]=\\\"test_output.output\\\" name=\\\"test_output\\\" rows=\\\"15\\\" cols=\\\"100\\\"></textarea>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"testoutputModalOpen = false\\\">Ok</button>\\n  </div>\\n</clr-modal>\\n\\n<clr-modal [(clrModalOpen)]=\\\"deleteToolModal\\\">\\n  <h3 class=\\\"modal-title\\\">Delete tool?</h3>\\n  <div class=\\\"modal-body\\\">\\n    <p *ngIf=\\\"selected_tool\\\">Are you sure you want to delete tool \\\"\\n      <b>{{selected_tool.name}}</b>\\\"?</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"deleteToolModal = false\\\">Cancel</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"DeleteTool(selected_tool)\\\">Delete</button>\\n  </div>\\n</clr-modal>\\n\\n<clr-modal [(clrModalOpen)]=\\\"infoModal\\\" [clrModalSize]=\\\"'lg'\\\">\\n  <h3 *ngIf=\\\"selected_task\\\" class=\\\"modal-title\\\">Task {{selected_task.id}} error log</h3>\\n  <div class=\\\"modal-body\\\">\\n    <h3>Info</h3>\\n    <p *ngIf=\\\"selected_tool\\\">\\n      <b>Name: </b>{{selected_tool.name}} <br>\\n      <b>Execution string: </b>{{selected_tool.commandstring}} <br>\\n      <b>Expected good: </b>{{selected_tool.expected_good}} <br>\\n      <b>Expected bad: </b>{{selected_tool.expected_bad}} <br>\\n      <b>Timeout: </b>{{selected_tool.timeout}} <br>\\n    </p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"infoModal = false\\\">Ok</button>\\n  </div>\\n</clr-modal>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { FindingsComponent } from './findings/findings.component';\nimport { ImportComponent } from './import/import.component';\nimport { TestComponent } from './test/test.component';\nimport { ToolsComponent } from './tools/tools.component';\nimport { TasksComponent } from './tasks/tasks.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'import',\n    component: ImportComponent\n  },\n  {\n    path: 'findings',\n    component: FindingsComponent\n  },\n  {\n    path: 'tools',\n    component: ToolsComponent\n  },\n  {\n    path: 'tasks',\n    component: TasksComponent\n  },\n  {\n    path: 'test',\n    component: TestComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from './data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'ATLAS';\n  runningtasks: any;\n\n  constructor(private data: DataService) { }\n\n  ngOnInit() {\n    this.data.GetRunningTasks().subscribe(data =>this.runningtasks = data)\n    console.log(this.runningtasks)\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { FindingsComponent } from './findings/findings.component';\nimport { DataService } from './data.service';\nimport { ClarityModule } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ImportComponent } from './import/import.component';\nimport { TestComponent } from './test/test.component';\nimport { ToolsComponent } from './tools/tools.component';\nimport { FormsModule } from '@angular/forms';\nimport { ClrFormsModule } from \"@clr/angular\";\nimport { TasksComponent } from './tasks/tasks.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    FindingsComponent,\n    ImportComponent,\n    TestComponent,\n    ToolsComponent,\n    TasksComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ClarityModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ClrFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpRequest, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  private backend_url = 'http://127.0.0.1:8000/'\n\n  getHosts() {\n    return this.http.get(this.backend_url + 'api/hosts/');\n  }\n\n  GetFindings() {\n    return this.http.get(this.backend_url + 'api/findings/')\n  }\n\n  DeleteFinding(finding):Observable<any>{\n    return this.http.delete(this.backend_url + 'api/findings/' + finding.id + \"/\")\n  }\n\n  AddFinding(finding):Observable<any>{\n    return this.http.post(this.backend_url + 'api/findings/', finding)\n  }\n  \n  EditFinding(finding):Observable<any>{\n    return this.http.put(this.backend_url + 'api/findings/' + finding.id + \"/\", finding)\n  }\n\n  GetFindingServices(finding_id) {\n    return this.http.get(this.backend_url + 'api/services/?finding=' + finding_id)\n  }\n\n  DeleteService(service):Observable<any>{\n    return this.http.delete(this.backend_url + 'api/services/' + service.id + \"/\")\n  }\n\n  AddService(service):Observable<any>{\n    return this.http.post(this.backend_url + 'api/services/', service)\n  }\n  \n  EditService(service):Observable<any>{\n    return this.http.put(this.backend_url + 'api/services/' + service.id + \"/\", service)\n  }\n\n  GetServicePocs(service_id) {\n    return this.http.get(this.backend_url + 'api/pocs/?service=' + service_id)\n  }\n\n  UpdateService(service):Observable<any>{\n    return this.http.put(this.backend_url + 'api/services/' + service.id + \"/\", service)\n  }\n\n  GetImports() {\n    return this.http.get(this.backend_url + 'api/imports/')\n  }\n\n  AddImport(import_obj):Observable<any>{\n    return this.http.post(this.backend_url + 'api/import/', import_obj)\n  }\n\n  GetTools() {\n    return this.http.get(this.backend_url + 'api/tools/')\n  }\n\n  GetTool(id){\n    return this.http.get(this.backend_url + 'api/tools/' + id + \"/\")\n  }\n\n  AddTool(tool):Observable<any>{\n    return this.http.post(this.backend_url + 'api/tools/', tool)\n  }\n\n  DeleteTool(tool):Observable<any>{\n    return this.http.delete(this.backend_url + 'api/tools/' + tool.id + \"/\")\n  }\n\n  EditTool(tool):Observable<any>{\n    return this.http.put(this.backend_url + 'api/tools/' + tool.id + \"/\", tool)\n  }\n\n  Execute(commandstring):Observable<any>{\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    return this.http.post(this.backend_url + 'api/execute/', commandstring, httpOptions)\n  }\n\n  GetTasks():Observable<any>{\n    return this.http.get(this.backend_url + 'api/tasks/')\n  }\n\n  GetRunningTasks():Observable<any>{\n    return this.http.get(this.backend_url + '/api/tasks/?running=1')\n  }\n\n  AddTask(task):Observable<any>{\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log(task)\n    return this.http.post(this.backend_url + 'api/tasks/', task, httpOptions)\n  }\n\n  StartTask(task_id):Observable<any>{\n    return this.http.get(this.backend_url + 'api/tasks/' + task_id + \"/start/\")\n  }\n\n  UploadNessus(file): Observable<HttpEvent<{}>> {\n\n    const formdata: FormData = new FormData();\n\n    formdata.append('file', file);\n\n    const req = new HttpRequest('POST', this.backend_url + 'api/importnessus/', formdata, {\n      reportProgress: true,\n      responseType: 'text'\n    });\n\n    return this.http.request(req);\n  }\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbmRpbmdzL2ZpbmRpbmdzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ClrDatagridStringFilterInterface } from \"@clr/angular\";\nimport { ObjectUnsubscribedError } from 'rxjs';\n\nexport class FindingFilter implements ClrDatagridStringFilterInterface<any> {\n  accepts(finding: any, search: string): boolean {\n    return finding.name.toLowerCase().indexOf(search) >= 0;\n  }\n}\n\nexport class HostFilter implements ClrDatagridStringFilterInterface<any> {\n  accepts(service: any, search: string): boolean {\n    return service.service.host.ip.toLowerCase().indexOf(search) >= 0;\n  }\n}\n\nexport class PortFilter implements ClrDatagridStringFilterInterface<any> {\n  accepts(service: any, search: string): boolean {\n    return String(service.service.port).indexOf(search) >= 0;\n  }\n}\n\nexport class TypeFilter implements ClrDatagridStringFilterInterface<any> {\n  accepts(service: any, search: string): boolean {\n    return service.service.name.toLowerCase().indexOf(search) >= 0;\n  }\n}\n\nexport class FindingCheckedFilter implements ClrDatagridStringFilterInterface<any> {\n  accepts(finding: any, search: string): boolean {\n    return String(finding.checked).indexOf(search) >= 0;\n  }\n}\n\n@Component({\n  selector: 'app-hosts',\n  templateUrl: './findings.component.html',\n  styleUrls: ['./findings.component.css']\n})\n\nexport class FindingsComponent implements OnInit {\n  //hosts: Object;\n  selected_finding: any;\n  findings: Object;\n  finding_services: Object;\n  service_pocs: any;\n  selected = [];\n  selected_services = [];\n  tools: Object;\n  new_task: any;\n  new_finding: any;\n  selected_tool: any;\n  task_threads: any = 0;\n  viewPocModal = false\n  selected_service = Object;\n  poc_options: any;\n\n\n  new_service: any;\n  new_host: any;\n  newHostIP: any;\n  newHostFQDN: any;\n  newHostMAC: any;\n  newHostOS: any;\n  newServiceName: any;\n  newServicePort: any;\n  newServiceProtocol: any;\n\n\n  private findingFilter = new FindingFilter();\n  private hostFilter = new HostFilter();\n  private portFilter = new PortFilter();\n  private typeFilter = new TypeFilter();\n\n  constructor(private data: DataService) {\n  }\n\n  ngOnInit() {\n    this.getFindings()\n\n    this.GetTools()\n  }\n\n  getFindings() {\n    this.data.GetFindings().subscribe(data => this.findings = data);\n  }\n\n  selectedFindingChanged(selected_finding) {\n    if (selected_finding) {\n      this.selected_finding = selected_finding;\n      this.getFindingServices(selected_finding.id)\n    }\n  }\n\n  getFindingServices(finding_id) {\n    this.data.GetFindingServices(finding_id).subscribe(data => this.finding_services = data);\n  }\n\n  getServicePocs(service_id) {\n    this.data.GetServicePocs(service_id).subscribe(data => this.service_pocs = data);\n  }\n\n  setHasPoc(service) {\n    if (service.haspoc == 0) {\n      service.haspoc = 1\n      this.data.UpdateService(service).subscribe(data => service = data)\n    } else if (service.haspoc == 1) {\n      service.haspoc = 0\n      this.data.UpdateService(service).subscribe(data => service = data)\n    }\n  }\n\n  setFalsePositive(service) {\n    if (service.falsepositive == 0) {\n      service.falsepositive = 1\n      this.data.UpdateService(service).subscribe(data => service = data)\n    } else if (service.falsepositive == 1) {\n      service.falsepositive = 0\n      this.data.UpdateService(service).subscribe(data => service = data)\n    }\n  }\n\n  SetThreads(threads) {\n    this.task_threads = threads\n  }\n\n  GetTools() {\n    this.data.GetTools().subscribe(data => this.tools = data)\n  }\n\n  AddTask() {\n    this.new_task = new Object()\n    this.new_task.services = new Array()\n    this.new_task.tool = this.selected_tool.id\n    this.selected_services.forEach(poc => { this.new_task.services.push(poc.id) });\n    this.new_task.threads = this.task_threads\n    this.data.AddTask(this.new_task).subscribe()\n  }\n\n  replaceLineBreak(s: string) {\n    return s.replace('\\n', '<br />');\n  }\n\n  viewPocs(service) {\n    this.selected_service = service\n    this.viewPocModal = true\n    this.getServicePocs(service.id)\n  }\n\n  copyToClipboard(val: string) {\n    console.log(val)\n    let selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = val;\n    document.getElementById(\"pocmodal\").appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.getElementById(\"pocmodal\").removeChild(selBox);\n  }\n\n\n  doPrint(value) {\n    console.log(value.info)\n  }\n\n  AddFinding(finding_name) {\n    this.new_finding = new Object()\n    this.new_finding.name = finding_name\n    this.data.AddFinding(this.new_finding).subscribe()\n    this.getFindings()\n  }\n\n  deleteFinding(finding) {\n    this.data.DeleteFinding(finding).subscribe(data => {\n      this.getFindings();\n    })\n  }\n\n  editFinding(finding) {\n    this.data.EditFinding(finding).subscribe(data => {\n      this.getFindings();\n    })\n  }\n\n  toggleFindingDone(finding) {\n    if (finding.checked == 1) {\n      finding.checked = 0;\n    }\n    else if (finding.checked == 0) {\n      finding.checked = 1\n    }\n    this.data.EditFinding(finding).subscribe(data => {\n      this.getFindings();\n    })\n  }\n\n  addService() {\n    this.new_host = new Object()\n    this.new_host.ip = this.newHostIP\n    this.new_host.fqdn = this.newHostFQDN\n    this.new_host.mac = this.newHostMAC\n    this.new_host.os = this.newHostOS\n\n    this.new_service = new Object();\n    this.new_service.name = this.newServiceName\n    this.new_service.port = this.newServicePort\n    this.new_service.protocol = this.newServiceProtocol\n    this.new_service.host = this.new_host\n\n    this.data.AddService(this.new_service).subscribe()\n    this.getFindingServices(this.selected_finding)\n  }\n\n  clearServices(){\n    this.finding_services = null\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".button-input {\\n    padding: 0;\\n    border: none;\\n    background: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW1wb3J0L2ltcG9ydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLFlBQVk7SUFDWixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9pbXBvcnQvaW1wb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnV0dG9uLWlucHV0IHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse, HttpEventType } from '@angular/common/http';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-import',\n  templateUrl: './import.component.html',\n  styleUrls: ['./import.component.css']\n})\nexport class ImportComponent implements OnInit {\n\n  selectedFiles: FileList;\n  currentFileUpload: File;\n  success: boolean;\n  uploading: boolean;\n  progress: { percentage: number } = { percentage: 0 };\n\n  imports: Object;\n\n  constructor(private data: DataService) { }\n\n  ngOnInit() {\n    this.success = false;\n    this.GetImports();\n  }\n\n  selectFile(event) {\n    this.selectedFiles = event.target.files;\n  }\n\n  upload() {\n    this.uploading = true;\n    this.success = false;\n    this.currentFileUpload = this.selectedFiles.item(0);\n    this.data.UploadNessus(this.currentFileUpload).subscribe(event => {\n      if (event.type === HttpEventType.UploadProgress) {\n        this.progress.percentage = Math.round(100 * event.loaded / event.total);\n      } else if (event instanceof HttpResponse) {\n        this.success = true;\n        this.currentFileUpload = null\n        this.GetImports();\n      }\n    });\n \n    this.selectedFiles = undefined;\n  }\n\n  GetImports(){ \n    this.data.GetImports().subscribe(data => this.imports = data) \n  }\n  \n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2tzL3Rhc2tzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n\n  selected_task: any;\n  tasks: Object;\n  tool: Object;\n\n  constructor(private data: DataService) { }\n\n  ngOnInit() {\n    this.GetTasks()\n  }\n\n  GetTasks(){ \n    this.data.GetTasks().subscribe(data => this.tasks = data)\n  }  \n\n  GetTool(tool_id){\n    var tool\n    this.data.GetTool(tool_id).subscribe(data => this.tool = data);\n  }\n\n  StartTask(task){\n    this.data.StartTask(task.id).subscribe()\n    task.running = 1\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QvdGVzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, ViewChild, OnInit } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\nimport { FormsModule }   from '@angular/forms';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n  ngOnInit() {\n    \n  }\n\n  @ViewChild(\"wizard\", { static: true }) wizard: ClrWizard;\n  @ViewChild(\"myForm\", { static: true }) formData: any;\n\n    loadingFlag: boolean = false;\n    errorFlag: boolean = false;\n\n    // have to define doCancel because page will prevent doCancel from working\n    // if the page had a previous button, you would need to call \n    // this.wizard.previous() manually as well...\n    doCancel(): void {\n        this.wizard.close();\n    }\n\n    onCommit(): void {\n        let value: any = this.formData.value;\n        this.loadingFlag = true;\n        this.errorFlag = false;\n\n        setTimeout(() => {\n            if (value.answer === \"42\") {\n                this.wizard.forceNext();\n            } else {\n                this.errorFlag = true;\n            }\n            this.loadingFlag = false;\n        }, 1000);\n    }\n\n    copyMessage(val: string){\n        let selBox = document.createElement('textarea');\n        selBox.style.position = 'fixed';\n        selBox.style.left = '0';\n        selBox.style.top = '0';\n        selBox.style.opacity = '0';\n        selBox.value = val;\n        document.body.appendChild(selBox);\n        selBox.select();\n        selBox.focus();\n        document.execCommand('copy');\n        document.body.removeChild(selBox);\n      }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rvb2xzL3Rvb2xzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataService } from '../data.service';\nimport {ClrWizard, ClrModal} from \"@clr/angular\";\n\n@Component({\n  selector: 'app-tools',\n  templateUrl: './tools.component.html',\n  styleUrls: ['./tools.component.css']\n})\nexport class ToolsComponent implements OnInit {\n\n  @ViewChild(\"wizardlg\", { static: true }) wizardLarge: ClrWizard;\n  @ViewChild(\"toolForm\", { static: true }) formData: any;\n\n  lgOpen: boolean = false;\n  selected_tool: any;\n  new_tool: boolean = true;\n  deleteToolModal: boolean = false;\n  form_tool: any;\n  loading: boolean = false;\n  test_output: any = {};\n  testoutputModalOpen: boolean = false;\n  \n  test_target = ''\n  test_port = ''\n  test_commandstring = ''\n\n  tools: Object;\n\n  constructor(private data: DataService) { \n    this.form_tool = {}; \n  }\n\n  ngOnInit() {\n    this.GetTools()\n  }\n\n  FinishWizard(tool){\n    if(this.new_tool){\n      this.AddTool(tool)\n    }\n    else {\n      this.EditTool(tool)\n    }\n  }\n\n  AddTool(tool){\n    this.data.AddTool(tool).subscribe(data => {\n      tool = data; \n      this.GetTools();})\n  }\n\n  EditTool(tool){\n    this.wizardLarge.reset()\n    this.data.EditTool(tool).subscribe(data => {\n      tool = data; \n      this.GetTools();})\n  }\n\n  DeleteTool(tool){\n    this.data.DeleteTool(tool).subscribe(data => {\n      this.GetTools();})\n    this.deleteToolModal = false    \n  }\n\n  GetTools(){ \n    this.data.GetTools().subscribe(data => this.tools = data) \n  }\n\n  ParseCommand(){\n    if(this.form_tool.path){\n      this.test_commandstring = this.form_tool.commandstring.replace(\"<host>\", this.test_target).replace(\"<port>\", this.test_port)\n    }\n    else {\n      this.test_commandstring = this.form_tool.commandstring.replace(\"<host>\", this.test_target).replace(\"<port>\", this.test_port)\n    }   \n  }\n\n  onKey(event: any) { // without type info\n    this.test_commandstring = event.target.value;\n  }\n\n  Execute(){\n    this.data.Execute('{\"commandstring\":\"'+this.test_commandstring+'\"}').subscribe(data => {\n      this.test_output = data;\n      this.loading = false;\n      this.testoutputModalOpen = true;\n      console.log(this.test_output)})    \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}